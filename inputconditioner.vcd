$date
	Wed Oct 25 12:11:55 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testConditioner $end
$var wire 1 ! conditioned $end
$var wire 1 " falling $end
$var wire 1 # rising $end
$var reg 1 $ clk $end
$var reg 1 % pin $end
$scope module dut $end
$var wire 1 & clk $end
$var wire 1 ! conditioned $end
$var wire 1 ' noisysignal $end
$var reg 1 ( negativeedge $end
$var reg 1 ) positiveedge $end
$var reg 1 * prevconditioned $end
$scope module deb $end
$var wire 1 & clk $end
$var wire 1 ' sig $end
$var reg 1 + out $end
$var reg 3 , prev_vals [2:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ,
x+
0*
x)
x(
0'
0&
0%
0$
x#
x"
x!
$end
#10
bx0 ,
0(
0"
1$
1&
#20
0$
0&
#30
bx00 ,
1$
1&
#40
0$
0&
#50
b0 ,
1$
1&
#60
0$
0&
#70
0+
0!
1$
1&
#80
0$
0&
#90
1$
1&
#100
0$
0&
1%
1'
#110
b1 ,
1$
1&
#120
0$
0&
#130
b11 ,
1$
1&
#140
0$
0&
#150
b111 ,
1$
1&
#160
0$
0&
#170
1+
1!
1$
1&
#180
0$
0&
#190
1$
1&
#200
0$
0&
#210
1$
1&
#220
0$
0&
#230
1$
1&
#240
0$
0&
