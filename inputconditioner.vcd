$date
	Tue Oct 24 16:41:04 2017
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testConditioner $end
$var wire 1 ! conditioned $end
$var wire 1 " falling $end
$var wire 1 # rising $end
$var reg 1 $ clk $end
$var reg 1 % pin $end
$scope module dut $end
$var wire 1 & clk $end
$var wire 1 ' noisysignal $end
$var reg 1 ( conditioned $end
$var reg 3 ) counter [2:0] $end
$var reg 1 * negativeedge $end
$var reg 1 + positiveedge $end
$var reg 1 , synchronizer0 $end
$var reg 1 - synchronizer1 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0-
0,
x+
x*
b0 )
x(
0'
0&
0%
0$
x#
x"
x!
$end
#10
b1 )
1$
1&
#20
0$
0&
#30
b10 )
1$
1&
#40
1%
1'
0$
0&
#50
b11 )
0%
0'
1$
1&
#60
1%
1'
0$
0&
#70
1,
b100 )
1$
1&
#80
0$
0&
#90
1-
b101 )
1$
1&
#100
0$
0&
#110
1(
1!
b0 )
1$
1&
#120
0%
0'
0$
0&
#130
0,
1$
1&
#140
0$
0&
#150
0-
1$
1&
#160
0$
0&
#170
b1 )
1$
1&
#180
0$
0&
#190
b10 )
1$
1&
#200
0$
0&
#210
b11 )
1$
1&
#220
0$
0&
#230
b100 )
1$
1&
#240
0$
0&
#250
b101 )
1$
1&
#260
0$
0&
#270
0(
0!
b0 )
1$
1&
#280
0$
0&
